<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AttackedFieldColor" xml:space="preserve">
    <value>Wybierz kolor atakowanego pola w grze:</value>
  </data>
  <data name="Attention" xml:space="preserve">
    <value>Uwaga</value>
  </data>
  <data name="BetaVersion" xml:space="preserve">
    <value>Tryb gry sieciowej będzie dostępny dopiero po zakończeniu prac nad aplikacją.</value>
  </data>
  <data name="Blue" xml:space="preserve">
    <value>Niebieski</value>
  </data>
  <data name="BoardSize" xml:space="preserve">
    <value>Rozmiar planszy: </value>
  </data>
  <data name="Brown" xml:space="preserve">
    <value>Brązowy</value>
  </data>
  <data name="ChangeInncorectSettings" xml:space="preserve">
    <value>Zmień nieprawidłowe ustawienia</value>
  </data>
  <data name="CreateGame" xml:space="preserve">
    <value>Stwórz grę</value>
  </data>
  <data name="CreateGameExitAlert" xml:space="preserve">
    <value>Ustawienia gry nie zostaną zapisane. Jesteś pewny, że chcesz wyjść?</value>
  </data>
  <data name="CreateGameHeader" xml:space="preserve">
    <value>Wybierz ustawienia gry</value>
  </data>
  <data name="Cyan" xml:space="preserve">
    <value>Cyjan</value>
  </data>
  <data name="Dark blue" xml:space="preserve">
    <value>Ciemny niebieski</value>
  </data>
  <data name="Dark cyan" xml:space="preserve">
    <value>Ciemny cyjan</value>
  </data>
  <data name="Dark gray" xml:space="preserve">
    <value>Ciemny szary</value>
  </data>
  <data name="Dark green" xml:space="preserve">
    <value>Ciemny zielony</value>
  </data>
  <data name="Dark orange" xml:space="preserve">
    <value>Ciemny pomarańczowy</value>
  </data>
  <data name="Dark red" xml:space="preserve">
    <value>Ciemny czerwony</value>
  </data>
  <data name="Dark violet" xml:space="preserve">
    <value>Ciemny fiołkowy</value>
  </data>
  <data name="EmptyFieldColor" xml:space="preserve">
    <value>Wybierz kolor pustego pola wroga w grze:</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>Angielski</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Powrót</value>
  </data>
  <data name="ExitAlert" xml:space="preserve">
    <value>Ostrzeżenie o wyjściu</value>
  </data>
  <data name="ExitIncorrectSettingsAlert" xml:space="preserve">
    <value>Kolory przycisków nie mogą się powtarzać.</value>
  </data>
  <data name="ExitSelectGamemode" xml:space="preserve">
    <value>Powrót do menu</value>
  </data>
  <data name="ExitSettingsAlert" xml:space="preserve">
    <value>Zapisać zmiany?</value>
  </data>
  <data name="FieldSelectColor" xml:space="preserve">
    <value>Wybierz kolor przycisku wyboru w grze:</value>
  </data>
  <data name="FirstMenuButton" xml:space="preserve">
    <value>Graj</value>
  </data>
  <data name="Gray" xml:space="preserve">
    <value>Szary</value>
  </data>
  <data name="Green" xml:space="preserve">
    <value>Zielony</value>
  </data>
  <data name="HowPlay" xml:space="preserve">
    <value>Jak grać?</value>
  </data>
  <data name="JoinGame" xml:space="preserve">
    <value>Dołącz do gry</value>
  </data>
  <data name="LangSelect" xml:space="preserve">
    <value>Wybierz język aplikacji:</value>
  </data>
  <data name="NameApplication" xml:space="preserve">
    <value>Wojny statków</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>Nie</value>
  </data>
  <data name="Orange" xml:space="preserve">
    <value>Pomarańczowy</value>
  </data>
  <data name="Pink" xml:space="preserve">
    <value>Różowy</value>
  </data>
  <data name="Polish" xml:space="preserve">
    <value>Polski</value>
  </data>
  <data name="Purple" xml:space="preserve">
    <value>Fioletowy</value>
  </data>
  <data name="Red" xml:space="preserve">
    <value>Czerwony</value>
  </data>
  <data name="RoundTime" xml:space="preserve">
    <value>Czas rundy gracza: </value>
  </data>
  <data name="Sea green" xml:space="preserve">
    <value>Morski</value>
  </data>
  <data name="SelectedAttackFieldColor" xml:space="preserve">
    <value>Wybierz kolor pola wybranego do ataku w grze:</value>
  </data>
  <data name="SelectGamemode" xml:space="preserve">
    <value>Wybierz tryb gry</value>
  </data>
  <data name="SelectShipColor" xml:space="preserve">
    <value>Wybierz kolor pola statku w grze:</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Ustawienia</value>
  </data>
  <data name="SettingsAccept" xml:space="preserve">
    <value>Zapisz moje zmiany</value>
  </data>
  <data name="SettingsReject" xml:space="preserve">
    <value>Nie zapisuj moich zmian</value>
  </data>
  <data name="ShipCount" xml:space="preserve">
    <value>Ilość statków jednego gracza: </value>
  </data>
  <data name="Sky blue" xml:space="preserve">
    <value>Błękitny</value>
  </data>
  <data name="Violet" xml:space="preserve">
    <value>Fiołkowy</value>
  </data>
  <data name="WithBot" xml:space="preserve">
    <value>Gra z botem</value>
  </data>
  <data name="WithPlayer" xml:space="preserve">
    <value>Gra lokalnie z drugim graczem</value>
  </data>
  <data name="Yellow" xml:space="preserve">
    <value>Żółty</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Tak</value>
  </data>
</root>